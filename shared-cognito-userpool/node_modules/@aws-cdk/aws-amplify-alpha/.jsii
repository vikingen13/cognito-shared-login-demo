{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "yaml": "1.10.2"
  },
  "dependencies": {
    "aws-cdk-lib": "^2.20.0",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_billingconductor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.BillingConductor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.billingconductor"
            },
            "python": {
              "module": "aws_cdk.aws_billingconductor"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iot1click": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT1Click"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot1click"
            },
            "python": {
              "module": "aws_cdk.aws_iot1click"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_personalize": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Personalize"
            },
            "java": {
              "package": "software.amazon.awscdk.services.personalize"
            },
            "python": {
              "module": "aws_cdk.aws_personalize"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudAssembly.Schema"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudassembly.schema"
            },
            "python": {
              "module": "aws_cdk.cloud_assembly_schema"
            }
          }
        },
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_kubectl": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.Kubectl"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.kubectl"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_kubectl"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        },
        "aws-cdk-lib.triggers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Triggers"
            },
            "java": {
              "package": "software.amazon.awscdk.triggers"
            },
            "python": {
              "module": "aws_cdk.triggers"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Amplify",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.55.1 (build 07d2d90)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::Amplify",
    "aws-amplify"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-amplify-alpha",
  "readme": {
    "markdown": "# AWS Amplify Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThe AWS Amplify Console provides a Git-based workflow for deploying and hosting fullstack serverless web applications. A fullstack serverless app consists of a backend built with cloud resources such as GraphQL or REST APIs, file and data storage, and a frontend built with single page application frameworks such as React, Angular, Vue, or Gatsby.\n\n## Setting up an app with branches, custom rules and a domain\n\nTo set up an Amplify Console app, define an `App`:\n\n```ts\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nconst amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  buildSpec: codebuild.BuildSpec.fromObjectToYaml({\n    // Alternatively add a `amplify.yml` to the repo\n    version: '1.0',\n    frontend: {\n      phases: {\n        preBuild: {\n          commands: [\n            'yarn',\n          ],\n        },\n        build: {\n          commands: [\n            'yarn build',\n          ],\n        },\n      },\n      artifacts: {\n        baseDirectory: 'public',\n        files:\n        - '**/*',\n      },\n    },\n  }),\n});\n```\n\nTo connect your `App` to GitLab, use the `GitLabSourceCodeProvider`:\n\n```ts\nconst amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitLabSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-gitlab-token'),\n  }),\n});\n```\n\nTo connect your `App` to CodeCommit, use the `CodeCommitSourceCodeProvider`:\n\n```ts\nimport * as codecommit from 'aws-cdk-lib/aws-codecommit';\n\nconst repository = new codecommit.Repository(this, 'Repo', {\n  repositoryName: 'my-repo',\n});\n\nconst amplifyApp = new amplify.App(this, 'App', {\n  sourceCodeProvider: new amplify.CodeCommitSourceCodeProvider({ repository }),\n});\n```\n\nThe IAM role associated with the `App` will automatically be granted the permission\nto pull the CodeCommit repository.\n\nAdd branches:\n\n```ts\ndeclare const amplifyApp: amplify.App;\n\nconst master = amplifyApp.addBranch('master'); // `id` will be used as repo branch name\nconst dev = amplifyApp.addBranch('dev', {\n  performanceMode: true, // optional, enables performance mode\n});\ndev.addEnvironment('STAGE', 'dev');\n```\n\nAuto build and pull request preview are enabled by default.\n\nAdd custom rules for redirection:\n\n```ts\ndeclare const amplifyApp: amplify.App;\namplifyApp.addCustomRule({\n  source: '/docs/specific-filename.html',\n  target: '/documents/different-filename.html',\n  status: amplify.RedirectStatus.TEMPORARY_REDIRECT,\n});\n```\n\nWhen working with a single page application (SPA), use the\n`CustomRule.SINGLE_PAGE_APPLICATION_REDIRECT` to set up a 200\nrewrite for all files to `index.html` except for the following\nfile extensions: css, gif, ico, jpg, js, png, txt, svg, woff,\nttf, map, json, webmanifest.\n\n```ts\ndeclare const mySinglePageApp: amplify.App;\n\nmySinglePageApp.addCustomRule(amplify.CustomRule.SINGLE_PAGE_APPLICATION_REDIRECT);\n```\n\nAdd a domain and map sub domains to branches:\n\n```ts\ndeclare const amplifyApp: amplify.App;\ndeclare const master: amplify.Branch;\ndeclare const dev: amplify.Branch;\n\nconst domain = amplifyApp.addDomain('example.com', {\n  enableAutoSubdomain: true, // in case subdomains should be auto registered for branches\n  autoSubdomainCreationPatterns: ['*', 'pr*'], // regex for branches that should auto register subdomains\n});\ndomain.mapRoot(master); // map master branch to domain root\ndomain.mapSubDomain(master, 'www');\ndomain.mapSubDomain(dev); // sub domain prefix defaults to branch name\n```\n\n## Restricting access\n\nPassword protect the app with basic auth by specifying the `basicAuth` prop.\n\nUse `BasicAuth.fromCredentials` when referencing an existing secret:\n\n```ts\nconst amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  basicAuth: amplify.BasicAuth.fromCredentials('username', SecretValue.secretsManager('my-github-token')),\n});\n```\n\nUse `BasicAuth.fromGeneratedPassword` to generate a password in Secrets Manager:\n\n```ts\nconst amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  basicAuth: amplify.BasicAuth.fromGeneratedPassword('username'),\n});\n```\n\nBasic auth can be added to specific branches:\n\n```ts\ndeclare const amplifyApp: amplify.App;\namplifyApp.addBranch('feature/next', {\n  basicAuth: amplify.BasicAuth.fromGeneratedPassword('username'),\n});\n```\n\n## Automatically creating and deleting branches\n\nUse the `autoBranchCreation` and `autoBranchDeletion` props to control creation/deletion\nof branches:\n\n```ts\nconst amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  autoBranchCreation: { // Automatically connect branches that match a pattern set\n    patterns: ['feature/*', 'test/*'],\n  },\n  autoBranchDeletion: true, // Automatically disconnect a branch when you delete a branch from your repository\n});\n```\n\n## Adding custom response headers\n\nUse the `customResponseHeaders` prop to configure custom response headers for an Amplify app:\n\n```ts\nconst amplifyApp = new amplify.App(this, 'App', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  customResponseHeaders: [\n    {\n      pattern: '*.json',\n      headers: {\n        'custom-header-name-1': 'custom-header-value-1',\n        'custom-header-name-2': 'custom-header-value-2',\n      },\n    },\n    {\n      pattern: '/path/*',\n      headers: {\n        'custom-header-name-1': 'custom-header-value-2',\n      },\n    },\n  ],\n});\n```\n\n## Deploying Assets\n\n`sourceCodeProvider` is optional; when this is not specified the Amplify app can be deployed to using `.zip` packages. The `asset` property can be used to deploy S3 assets to Amplify as part of the CDK:\n\n```ts\nimport * as assets from 'aws-cdk-lib/aws-s3-assets';\n\ndeclare const asset: assets.Asset;\ndeclare const amplifyApp: amplify.App;\nconst branch = amplifyApp.addBranch(\"dev\", { asset: asset });\n```\n"
  },
  "repository": {
    "directory": "packages/individual-packages/aws-amplify",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Amplify.Alpha",
      "packageId": "Amazon.CDK.AWS.Amplify.Alpha"
    },
    "go": {
      "moduleName": "github.com/aws/aws-cdk-go",
      "packageName": "awscdkamplifyalpha"
    },
    "java": {
      "maven": {
        "artifactId": "amplify-alpha",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.amplify.alpha"
    },
    "js": {
      "npm": "@aws-cdk/aws-amplify-alpha"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK"
      ],
      "distName": "aws-cdk.aws-amplify-alpha",
      "module": "aws_cdk.aws_amplify_alpha"
    }
  },
  "types": {
    "@aws-cdk/aws-amplify-alpha.App": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  autoBranchCreation: { // Automatically connect branches that match a pattern set\n    patterns: ['feature/*', 'test/*'],\n  },\n  autoBranchDeletion: true, // Automatically disconnect a branch when you delete a branch from your repository\n});",
        "stability": "experimental",
        "summary": "An Amplify Console application."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.App",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/app.ts",
          "line": 211
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.AppProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-amplify-alpha.IApp",
        "aws-cdk-lib.aws_iam.IGrantable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 168
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing application."
          },
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 172
          },
          "name": "fromAppId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "appId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.IApp"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "All environment variables that you add are encrypted to prevent rogue\naccess so you can use them to store secret information.",
            "stability": "experimental",
            "summary": "Adds an environment variable to the auto created branch."
          },
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 286
          },
          "name": "addAutoBranchEnvironment",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.App"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a branch to this application."
          },
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 294
          },
          "name": "addBranch",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-amplify-alpha.BranchOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.Branch"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a custom rewrite/redirect rule to this application."
          },
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 264
          },
          "name": "addCustomRule",
          "parameters": [
            {
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-amplify-alpha.CustomRule"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.App"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a domain to this application."
          },
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 304
          },
          "name": "addDomain",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-amplify-alpha.DomainOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.Domain"
            }
          }
        },
        {
          "docs": {
            "remarks": "All environment variables that you add are encrypted to prevent rogue\naccess so you can use them to store secret information.",
            "stability": "experimental",
            "summary": "Adds an environment variable to this application."
          },
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 275
          },
          "name": "addEnvironment",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.App"
            }
          }
        }
      ],
      "name": "App",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The application id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 179
          },
          "name": "appId",
          "overrides": "@aws-cdk/aws-amplify-alpha.IApp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 186
          },
          "name": "appName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 193
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The default domain of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 200
          },
          "name": "defaultDomain",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 205
          },
          "name": "grantPrincipal",
          "overrides": "aws-cdk-lib.aws_iam.IGrantable",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IPrincipal"
          }
        }
      ],
      "symbolId": "lib/app:App"
    },
    "@aws-cdk/aws-amplify-alpha.AppProps": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  autoBranchCreation: { // Automatically connect branches that match a pattern set\n    patterns: ['feature/*', 'test/*'],\n  },\n  autoBranchDeletion: true, // Automatically disconnect a branch when you delete a branch from your repository\n});",
        "stability": "experimental",
        "summary": "Properties for an App."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.AppProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 73
      },
      "name": "AppProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- a CDK generated name",
            "stability": "experimental",
            "summary": "The name for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 79
          },
          "name": "appName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no auto branch creation",
            "remarks": "Use this to automatically create\nbranches that match a certain pattern.",
            "stability": "experimental",
            "summary": "The auto branch creation configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 94
          },
          "name": "autoBranchCreation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.AutoBranchCreation"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Automatically disconnect a branch in the Amplify Console when you delete a branch from your Git repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 102
          },
          "name": "autoBranchDeletion",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no password protection",
            "remarks": "Use this to set password protection at an\napp level to all your branches.",
            "stability": "experimental",
            "summary": "The Basic Auth configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 110
          },
          "name": "basicAuth",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuth"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no build spec",
            "remarks": "Alternatively, add a `amplify.yml`\nfile to the repository.",
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/build-settings.html",
            "stability": "experimental",
            "summary": "BuildSpec for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 120
          },
          "name": "buildSpec",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_codebuild.BuildSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no custom response headers",
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/custom-headers.html",
            "stability": "experimental",
            "summary": "The custom HTTP response headers for an Amplify app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 130
          },
          "name": "customResponseHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-amplify-alpha.CustomResponseHeader"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no custom rewrite/redirect rules",
            "stability": "experimental",
            "summary": "Custom rewrite/redirect rules for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 137
          },
          "name": "customRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-amplify-alpha.CustomRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "experimental",
            "summary": "A description for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 144
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no environment variables",
            "remarks": "All environment variables that you add are encrypted to prevent rogue\naccess so you can use them to store secret information.",
            "stability": "experimental",
            "summary": "Environment variables for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 154
          },
          "name": "environmentVariables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new role is created",
            "remarks": "The App\nimplements IGrantable.",
            "stability": "experimental",
            "summary": "The IAM service role to associate with the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 162
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not connected to a source code provider",
            "stability": "experimental",
            "summary": "The source code provider for this application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 86
          },
          "name": "sourceCodeProvider",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.ISourceCodeProvider"
          }
        }
      ],
      "symbolId": "lib/app:AppProps"
    },
    "@aws-cdk/aws-amplify-alpha.AutoBranchCreation": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  autoBranchCreation: { // Automatically connect branches that match a pattern set\n    patterns: ['feature/*', 'test/*'],\n  },\n  autoBranchDeletion: true, // Automatically disconnect a branch when you delete a branch from your repository\n});",
        "stability": "experimental",
        "summary": "Auto branch creation configuration."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.AutoBranchCreation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 316
      },
      "name": "AutoBranchCreation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to enable auto building for the auto created branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 344
          },
          "name": "autoBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no password protection",
            "remarks": "Use this to set password protection for\nthe auto created branch.",
            "stability": "experimental",
            "summary": "The Basic Auth configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 330
          },
          "name": "basicAuth",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuth"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- application build spec",
            "stability": "experimental",
            "summary": "Build spec for the auto created branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 337
          },
          "name": "buildSpec",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_codebuild.BuildSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- application environment variables",
            "remarks": "All environment variables that you add are encrypted to prevent rogue\naccess so you can use them to store secret information.",
            "stability": "experimental",
            "summary": "Environment variables for the auto created branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 361
          },
          "name": "environmentVariables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all repository branches",
            "stability": "experimental",
            "summary": "Automated branch creation glob patterns."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 322
          },
          "name": "patterns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- automatically provision a temporary backend",
            "stability": "experimental",
            "summary": "The dedicated backend environment for the pull request previews of the auto created branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 369
          },
          "name": "pullRequestEnvironmentName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to enable pull request preview for the auto created branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 351
          },
          "name": "pullRequestPreview",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no stage",
            "stability": "experimental",
            "summary": "Stage for the auto created branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 376
          },
          "name": "stage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/app:AutoBranchCreation"
    },
    "@aws-cdk/aws-amplify-alpha.BasicAuth": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  basicAuth: amplify.BasicAuth.fromGeneratedPassword('username'),\n});",
        "stability": "experimental",
        "summary": "Basic Auth configuration."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuth",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/basic-auth.ts",
          "line": 77
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuthProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/basic-auth.ts",
        "line": 54
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a Basic Auth configuration from a username and a password."
          },
          "locationInModule": {
            "filename": "lib/basic-auth.ts",
            "line": 61
          },
          "name": "fromCredentials",
          "parameters": [
            {
              "docs": {
                "summary": "The username."
              },
              "name": "username",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The password."
              },
              "name": "password",
              "type": {
                "fqn": "aws-cdk-lib.SecretValue"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuth"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a Basic Auth configuration with a password generated in Secrets Manager."
          },
          "locationInModule": {
            "filename": "lib/basic-auth.ts",
            "line": 73
          },
          "name": "fromGeneratedPassword",
          "parameters": [
            {
              "docs": {
                "summary": "The username."
              },
              "name": "username",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The encryption key to use to encrypt the password in Secrets Manager."
              },
              "name": "encryptionKey",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_kms.IKey"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuth"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Binds this Basic Auth configuration to an App."
          },
          "locationInModule": {
            "filename": "lib/basic-auth.ts",
            "line": 82
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuthConfig"
            }
          }
        }
      ],
      "name": "BasicAuth",
      "symbolId": "lib/basic-auth:BasicAuth"
    },
    "@aws-cdk/aws-amplify-alpha.BasicAuthConfig": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A Basic Auth configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as amplify_alpha from '@aws-cdk/aws-amplify-alpha';\nconst basicAuthConfig: amplify_alpha.BasicAuthConfig = {\n  enableBasicAuth: false,\n  password: 'password',\n  username: 'username',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuthConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/basic-auth.ts",
        "line": 34
      },
      "name": "BasicAuthConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Whether to enable Basic Auth."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/basic-auth.ts",
            "line": 38
          },
          "name": "enableBasicAuth",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/basic-auth.ts",
            "line": 48
          },
          "name": "password",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/basic-auth.ts",
            "line": 43
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/basic-auth:BasicAuthConfig"
    },
    "@aws-cdk/aws-amplify-alpha.BasicAuthProps": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a BasicAuth.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as amplify_alpha from '@aws-cdk/aws-amplify-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_kms as kms } from 'aws-cdk-lib';\n\ndeclare const key: kms.Key;\ndeclare const secretValue: cdk.SecretValue;\nconst basicAuthProps: amplify_alpha.BasicAuthProps = {\n  username: 'username',\n\n  // the properties below are optional\n  encryptionKey: key,\n  password: secretValue,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuthProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/basic-auth.ts",
        "line": 9
      },
      "name": "BasicAuthProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/basic-auth.ts",
            "line": 13
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default master key",
            "stability": "experimental",
            "summary": "The encryption key to use to encrypt the password when it's generated in Secrets Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/basic-auth.ts",
            "line": 28
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A Secrets Manager generated password",
            "stability": "experimental",
            "summary": "The password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/basic-auth.ts",
            "line": 20
          },
          "name": "password",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.SecretValue"
          }
        }
      ],
      "symbolId": "lib/basic-auth:BasicAuthProps"
    },
    "@aws-cdk/aws-amplify-alpha.Branch": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const amplifyApp: amplify.App;\n\nconst master = amplifyApp.addBranch('master'); // `id` will be used as repo branch name\nconst dev = amplifyApp.addBranch('dev', {\n  performanceMode: true, // optional, enables performance mode\n});\ndev.addEnvironment('STAGE', 'dev');",
        "stability": "experimental",
        "summary": "An Amplify Console branch."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.Branch",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/branch.ts",
          "line": 165
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.BranchProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-amplify-alpha.IBranch"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/branch.ts",
        "line": 143
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing branch."
          },
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 147
          },
          "name": "fromBranchName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "branchName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.IBranch"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "All environment variables that you add are encrypted to prevent rogue\naccess so you can use them to store secret information.",
            "stability": "experimental",
            "summary": "Adds an environment variable to this branch."
          },
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 208
          },
          "name": "addEnvironment",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.Branch"
            }
          }
        }
      ],
      "name": "Branch",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 159
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 161
          },
          "name": "branchName",
          "overrides": "@aws-cdk/aws-amplify-alpha.IBranch",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/branch:Branch"
    },
    "@aws-cdk/aws-amplify-alpha.BranchOptions": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const amplifyApp: amplify.App;\n\nconst master = amplifyApp.addBranch('master'); // `id` will be used as repo branch name\nconst dev = amplifyApp.addBranch('dev', {\n  performanceMode: true, // optional, enables performance mode\n});\ndev.addEnvironment('STAGE', 'dev');",
        "stability": "experimental",
        "summary": "Options to add a branch to an application."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.BranchOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/branch.ts",
        "line": 38
      },
      "name": "BranchOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no asset",
            "remarks": "The Amplify app must not have a sourceCodeProvider configured as this resource uses Amplify's\nstartDeployment API to initiate and deploy a S3 asset onto the App.",
            "stability": "experimental",
            "summary": "Asset for deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 116
          },
          "name": "asset",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3_assets.Asset"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to enable auto building for the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 75
          },
          "name": "autoBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no password protection",
            "remarks": "Use this to set password protection for\nthe branch",
            "stability": "experimental",
            "summary": "The Basic Auth configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 45
          },
          "name": "basicAuth",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.BasicAuth"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the construct's id",
            "stability": "experimental",
            "summary": "The name of the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 52
          },
          "name": "branchName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no build spec",
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/build-settings.html",
            "stability": "experimental",
            "summary": "BuildSpec for the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 61
          },
          "name": "buildSpec",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_codebuild.BuildSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "experimental",
            "summary": "A description for the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 68
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- application environment variables",
            "remarks": "All environment variables that you add are encrypted to prevent rogue\naccess so you can use them to store secret information.",
            "stability": "experimental",
            "summary": "Environment variables for the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 92
          },
          "name": "environmentVariables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Performance mode optimizes for faster hosting performance by keeping content cached at the edge\nfor a longer interval. When performance mode is enabled, hosting configuration or code changes\ncan take up to 10 minutes to roll out.",
            "stability": "experimental",
            "summary": "Enables performance mode for the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 127
          },
          "name": "performanceMode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- automatically provision a temporary backend",
            "stability": "experimental",
            "summary": "The dedicated backend environment for the pull request previews."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 99
          },
          "name": "pullRequestEnvironmentName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to enable pull request preview for the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 82
          },
          "name": "pullRequestPreview",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no stage",
            "stability": "experimental",
            "summary": "Stage for the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 106
          },
          "name": "stage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/branch:BranchOptions"
    },
    "@aws-cdk/aws-amplify-alpha.BranchProps": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a Branch.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as amplify_alpha from '@aws-cdk/aws-amplify-alpha';\nimport { aws_codebuild as codebuild } from 'aws-cdk-lib';\nimport { aws_s3_assets as s3_assets } from 'aws-cdk-lib';\n\ndeclare const app: amplify_alpha.App;\ndeclare const asset: s3_assets.Asset;\ndeclare const basicAuth: amplify_alpha.BasicAuth;\ndeclare const buildSpec: codebuild.BuildSpec;\nconst branchProps: amplify_alpha.BranchProps = {\n  app: app,\n\n  // the properties below are optional\n  asset: asset,\n  autoBuild: false,\n  basicAuth: basicAuth,\n  branchName: 'branchName',\n  buildSpec: buildSpec,\n  description: 'description',\n  environmentVariables: {\n    environmentVariablesKey: 'environmentVariables',\n  },\n  performanceMode: false,\n  pullRequestEnvironmentName: 'pullRequestEnvironmentName',\n  pullRequestPreview: false,\n  stage: 'stage',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.BranchProps",
      "interfaces": [
        "@aws-cdk/aws-amplify-alpha.BranchOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/branch.ts",
        "line": 133
      },
      "name": "BranchProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The application within which the branch must be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 137
          },
          "name": "app",
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.IApp"
          }
        }
      ],
      "symbolId": "lib/branch:BranchProps"
    },
    "@aws-cdk/aws-amplify-alpha.CodeCommitSourceCodeProvider": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as codecommit from 'aws-cdk-lib/aws-codecommit';\n\nconst repository = new codecommit.Repository(this, 'Repo', {\n  repositoryName: 'my-repo',\n});\n\nconst amplifyApp = new amplify.App(this, 'App', {\n  sourceCodeProvider: new amplify.CodeCommitSourceCodeProvider({ repository }),\n});",
        "stability": "experimental",
        "summary": "CodeCommit source code provider."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.CodeCommitSourceCodeProvider",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/source-code-providers.ts",
          "line": 87
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.CodeCommitSourceCodeProviderProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-amplify-alpha.ISourceCodeProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/source-code-providers.ts",
        "line": 86
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Binds the source code provider to an app."
          },
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 89
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-amplify-alpha.ISourceCodeProvider",
          "parameters": [
            {
              "name": "app",
              "type": {
                "fqn": "@aws-cdk/aws-amplify-alpha.App"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.SourceCodeProviderConfig"
            }
          }
        }
      ],
      "name": "CodeCommitSourceCodeProvider",
      "symbolId": "lib/source-code-providers:CodeCommitSourceCodeProvider"
    },
    "@aws-cdk/aws-amplify-alpha.CodeCommitSourceCodeProviderProps": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as codecommit from 'aws-cdk-lib/aws-codecommit';\n\nconst repository = new codecommit.Repository(this, 'Repo', {\n  repositoryName: 'my-repo',\n});\n\nconst amplifyApp = new amplify.App(this, 'App', {\n  sourceCodeProvider: new amplify.CodeCommitSourceCodeProvider({ repository }),\n});",
        "stability": "experimental",
        "summary": "Properties for a CodeCommit source code provider."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.CodeCommitSourceCodeProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source-code-providers.ts",
        "line": 76
      },
      "name": "CodeCommitSourceCodeProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The CodeCommit repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 80
          },
          "name": "repository",
          "type": {
            "fqn": "aws-cdk-lib.aws_codecommit.IRepository"
          }
        }
      ],
      "symbolId": "lib/source-code-providers:CodeCommitSourceCodeProviderProps"
    },
    "@aws-cdk/aws-amplify-alpha.CustomResponseHeader": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Custom response header of an Amplify App.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as amplify_alpha from '@aws-cdk/aws-amplify-alpha';\nconst customResponseHeader: amplify_alpha.CustomResponseHeader = {\n  headers: {\n    headersKey: 'headers',\n  },\n  pattern: 'pattern',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.CustomResponseHeader",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 505
      },
      "name": "CustomResponseHeader",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The map of custom headers to be applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 514
          },
          "name": "headers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "These custom headers will be applied to all URL file paths that match this pattern."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 509
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/app:CustomResponseHeader"
    },
    "@aws-cdk/aws-amplify-alpha.CustomRule": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const amplifyApp: amplify.App;\namplifyApp.addCustomRule({\n  source: '/docs/specific-filename.html',\n  target: '/documents/different-filename.html',\n  status: amplify.RedirectStatus.TEMPORARY_REDIRECT,\n});",
        "see": "https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html",
        "stability": "experimental",
        "summary": "Custom rewrite/redirect rule for an Amplify App."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.CustomRule",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/app.ts",
          "line": 494
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.CustomRuleOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 451
      },
      "name": "CustomRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Sets up a 200 rewrite for all paths to `index.html` except for path containing a file extension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 456
          },
          "name": "SINGLE_PAGE_APPLICATION_REDIRECT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.CustomRule"
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html",
            "stability": "experimental",
            "summary": "The source pattern for a URL rewrite or redirect rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 467
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html",
            "stability": "experimental",
            "summary": "The target pattern for a URL rewrite or redirect rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 474
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- no condition",
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html",
            "stability": "experimental",
            "summary": "The condition for a URL rewrite or redirect rule, e.g. country code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 492
          },
          "name": "condition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "PERMANENT_REDIRECT",
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html",
            "stability": "experimental",
            "summary": "The status code for a URL rewrite or redirect rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 483
          },
          "name": "status",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.RedirectStatus"
          }
        }
      ],
      "symbolId": "lib/app:CustomRule"
    },
    "@aws-cdk/aws-amplify-alpha.CustomRuleOptions": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for a custom rewrite/redirect rule for an Amplify App.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as amplify_alpha from '@aws-cdk/aws-amplify-alpha';\nconst customRuleOptions: amplify_alpha.CustomRuleOptions = {\n  source: 'source',\n  target: 'target',\n\n  // the properties below are optional\n  condition: 'condition',\n  status: amplify_alpha.RedirectStatus.REWRITE,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.CustomRuleOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 412
      },
      "name": "CustomRuleOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html",
            "stability": "experimental",
            "summary": "The source pattern for a URL rewrite or redirect rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 418
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html",
            "stability": "experimental",
            "summary": "The target pattern for a URL rewrite or redirect rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 425
          },
          "name": "target",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no condition",
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html",
            "stability": "experimental",
            "summary": "The condition for a URL rewrite or redirect rule, e.g. country code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 443
          },
          "name": "condition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PERMANENT_REDIRECT",
            "see": "https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html",
            "stability": "experimental",
            "summary": "The status code for a URL rewrite or redirect rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 434
          },
          "name": "status",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.RedirectStatus"
          }
        }
      ],
      "symbolId": "lib/app:CustomRuleOptions"
    },
    "@aws-cdk/aws-amplify-alpha.Domain": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const amplifyApp: amplify.App;\ndeclare const master: amplify.Branch;\ndeclare const dev: amplify.Branch;\n\nconst domain = amplifyApp.addDomain('example.com', {\n  enableAutoSubdomain: true, // in case subdomains should be auto registered for branches\n  autoSubdomainCreationPatterns: ['*', 'pr*'], // regex for branches that should auto register subdomains\n});\ndomain.mapRoot(master); // map master branch to domain root\ndomain.mapSubDomain(master, 'www');\ndomain.mapSubDomain(dev); // sub domain prefix defaults to branch name",
        "stability": "experimental",
        "summary": "An Amplify Console domain."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.Domain",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/domain.ts",
          "line": 120
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.DomainProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/domain.ts",
        "line": 60
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Maps a branch to the domain root."
          },
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 161
          },
          "name": "mapRoot",
          "parameters": [
            {
              "name": "branch",
              "type": {
                "fqn": "@aws-cdk/aws-amplify-alpha.IBranch"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.Domain"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Maps a branch to a sub domain."
          },
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 153
          },
          "name": "mapSubDomain",
          "parameters": [
            {
              "docs": {
                "summary": "The branch."
              },
              "name": "branch",
              "type": {
                "fqn": "@aws-cdk/aws-amplify-alpha.IBranch"
              }
            },
            {
              "docs": {
                "remarks": "Use '' to map to the root of the domain. Defaults to branch name.",
                "summary": "The prefix."
              },
              "name": "prefix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.Domain"
            }
          }
        }
      ],
      "name": "Domain",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 67
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The DNS Record for certificate verification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 74
          },
          "name": "certificateRecord",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Branch patterns for the automatically created subdomain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 102
          },
          "name": "domainAutoSubDomainCreationPatterns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The IAM service role for the subdomain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 109
          },
          "name": "domainAutoSubDomainIamRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Specifies whether the automated creation of subdomains for branches is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 116
          },
          "name": "domainEnableAutoSubDomain",
          "type": {
            "fqn": "aws-cdk-lib.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 81
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The status of the domain association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 88
          },
          "name": "domainStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The reason for the current status of the domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 95
          },
          "name": "statusReason",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/domain:Domain"
    },
    "@aws-cdk/aws-amplify-alpha.DomainOptions": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const amplifyApp: amplify.App;\ndeclare const master: amplify.Branch;\ndeclare const dev: amplify.Branch;\n\nconst domain = amplifyApp.addDomain('example.com', {\n  enableAutoSubdomain: true, // in case subdomains should be auto registered for branches\n  autoSubdomainCreationPatterns: ['*', 'pr*'], // regex for branches that should auto register subdomains\n});\ndomain.mapRoot(master); // map master branch to domain root\ndomain.mapSubDomain(master, 'www');\ndomain.mapSubDomain(dev); // sub domain prefix defaults to branch name",
        "stability": "experimental",
        "summary": "Options to add a domain to an application."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.DomainOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/domain.ts",
        "line": 11
      },
      "name": "DomainOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- all repository branches ['*', 'pr*']",
            "stability": "experimental",
            "summary": "Branches which should automatically create subdomains."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 38
          },
          "name": "autoSubdomainCreationPatterns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the construct's id",
            "stability": "experimental",
            "summary": "The name of the domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 17
          },
          "name": "domainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Automatically create subdomains for connected branches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 31
          },
          "name": "enableAutoSubdomain",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use `addSubDomain()` to add subdomains",
            "stability": "experimental",
            "summary": "Subdomains."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 24
          },
          "name": "subDomains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-amplify-alpha.SubDomain"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/domain:DomainOptions"
    },
    "@aws-cdk/aws-amplify-alpha.DomainProps": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a Domain.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as amplify_alpha from '@aws-cdk/aws-amplify-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const app: amplify_alpha.App;\ndeclare const branch: amplify_alpha.Branch;\ndeclare const role: iam.Role;\nconst domainProps: amplify_alpha.DomainProps = {\n  app: app,\n\n  // the properties below are optional\n  autoSubdomainCreationPatterns: ['autoSubdomainCreationPatterns'],\n  autoSubDomainIamRole: role,\n  domainName: 'domainName',\n  enableAutoSubdomain: false,\n  subDomains: [{\n    branch: branch,\n\n    // the properties below are optional\n    prefix: 'prefix',\n  }],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.DomainProps",
      "interfaces": [
        "@aws-cdk/aws-amplify-alpha.DomainOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/domain.ts",
        "line": 44
      },
      "name": "DomainProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The application to which the domain must be connected."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 48
          },
          "name": "app",
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.IApp"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the IAM role from App.grantPrincipal",
            "stability": "experimental",
            "summary": "The IAM role with access to Route53 when using enableAutoSubdomain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 54
          },
          "name": "autoSubDomainIamRole",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "lib/domain:DomainProps"
    },
    "@aws-cdk/aws-amplify-alpha.GitHubSourceCodeProvider": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  autoBranchCreation: { // Automatically connect branches that match a pattern set\n    patterns: ['feature/*', 'test/*'],\n  },\n  autoBranchDeletion: true, // Automatically disconnect a branch when you delete a branch from your repository\n});",
        "stability": "experimental",
        "summary": "GitHub source code provider."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.GitHubSourceCodeProvider",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/source-code-providers.ts",
          "line": 29
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.GitHubSourceCodeProviderProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-amplify-alpha.ISourceCodeProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/source-code-providers.ts",
        "line": 28
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Binds the source code provider to an app."
          },
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 31
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-amplify-alpha.ISourceCodeProvider",
          "parameters": [
            {
              "name": "_app",
              "type": {
                "fqn": "@aws-cdk/aws-amplify-alpha.App"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.SourceCodeProviderConfig"
            }
          }
        }
      ],
      "name": "GitHubSourceCodeProvider",
      "symbolId": "lib/source-code-providers:GitHubSourceCodeProvider"
    },
    "@aws-cdk/aws-amplify-alpha.GitHubSourceCodeProviderProps": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitHubSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-github-token'),\n  }),\n  autoBranchCreation: { // Automatically connect branches that match a pattern set\n    patterns: ['feature/*', 'test/*'],\n  },\n  autoBranchDeletion: true, // Automatically disconnect a branch when you delete a branch from your repository\n});",
        "stability": "experimental",
        "summary": "Properties for a GitHub source code provider."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.GitHubSourceCodeProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source-code-providers.ts",
        "line": 8
      },
      "name": "GitHubSourceCodeProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A personal access token with the `repo` scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 22
          },
          "name": "oauthToken",
          "type": {
            "fqn": "aws-cdk-lib.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The user or organization owning the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 12
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 17
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/source-code-providers:GitHubSourceCodeProviderProps"
    },
    "@aws-cdk/aws-amplify-alpha.GitLabSourceCodeProvider": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitLabSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-gitlab-token'),\n  }),\n});",
        "stability": "experimental",
        "summary": "GitLab source code provider."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.GitLabSourceCodeProvider",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/source-code-providers.ts",
          "line": 63
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.GitLabSourceCodeProviderProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-amplify-alpha.ISourceCodeProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/source-code-providers.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Binds the source code provider to an app."
          },
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 65
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-amplify-alpha.ISourceCodeProvider",
          "parameters": [
            {
              "name": "_app",
              "type": {
                "fqn": "@aws-cdk/aws-amplify-alpha.App"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.SourceCodeProviderConfig"
            }
          }
        }
      ],
      "name": "GitLabSourceCodeProvider",
      "symbolId": "lib/source-code-providers:GitLabSourceCodeProvider"
    },
    "@aws-cdk/aws-amplify-alpha.GitLabSourceCodeProviderProps": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const amplifyApp = new amplify.App(this, 'MyApp', {\n  sourceCodeProvider: new amplify.GitLabSourceCodeProvider({\n    owner: '<user>',\n    repository: '<repo>',\n    oauthToken: SecretValue.secretsManager('my-gitlab-token'),\n  }),\n});",
        "stability": "experimental",
        "summary": "Properties for a GitLab source code provider."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.GitLabSourceCodeProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source-code-providers.ts",
        "line": 42
      },
      "name": "GitLabSourceCodeProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A personal access token with the `repo` scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 56
          },
          "name": "oauthToken",
          "type": {
            "fqn": "aws-cdk-lib.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The user or organization owning the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 46
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-code-providers.ts",
            "line": 51
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/source-code-providers:GitLabSourceCodeProviderProps"
    },
    "@aws-cdk/aws-amplify-alpha.IApp": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "An Amplify Console application."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.IApp",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 15
      },
      "name": "IApp",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The application id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 21
          },
          "name": "appId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/app:IApp"
    },
    "@aws-cdk/aws-amplify-alpha.IBranch": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "A branch."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.IBranch",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/branch.ts",
        "line": 26
      },
      "name": "IBranch",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/branch.ts",
            "line": 32
          },
          "name": "branchName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/branch:IBranch"
    },
    "@aws-cdk/aws-amplify-alpha.ISourceCodeProvider": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "A source code provider."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.ISourceCodeProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 61
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Binds the source code provider to an app."
          },
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 67
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "The app [disable-awslint:ref-via-interface]."
              },
              "name": "app",
              "type": {
                "fqn": "@aws-cdk/aws-amplify-alpha.App"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-amplify-alpha.SourceCodeProviderConfig"
            }
          }
        }
      ],
      "name": "ISourceCodeProvider",
      "symbolId": "lib/app:ISourceCodeProvider"
    },
    "@aws-cdk/aws-amplify-alpha.RedirectStatus": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const amplifyApp: amplify.App;\namplifyApp.addCustomRule({\n  source: '/docs/specific-filename.html',\n  target: '/documents/different-filename.html',\n  status: amplify.RedirectStatus.TEMPORARY_REDIRECT,\n});",
        "stability": "experimental",
        "summary": "The status code for a URL rewrite or redirect rule."
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.RedirectStatus",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 382
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Rewrite (200)."
          },
          "name": "REWRITE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Permanent redirect (301)."
          },
          "name": "PERMANENT_REDIRECT"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Temporary redirect (302)."
          },
          "name": "TEMPORARY_REDIRECT"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Not found (404)."
          },
          "name": "NOT_FOUND"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Not found rewrite (404)."
          },
          "name": "NOT_FOUND_REWRITE"
        }
      ],
      "name": "RedirectStatus",
      "symbolId": "lib/app:RedirectStatus"
    },
    "@aws-cdk/aws-amplify-alpha.SourceCodeProviderConfig": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration for the source code provider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as amplify_alpha from '@aws-cdk/aws-amplify-alpha';\nimport * as cdk from 'aws-cdk-lib';\n\ndeclare const secretValue: cdk.SecretValue;\nconst sourceCodeProviderConfig: amplify_alpha.SourceCodeProviderConfig = {\n  repository: 'repository',\n\n  // the properties below are optional\n  accessToken: secretValue,\n  oauthToken: secretValue,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.SourceCodeProviderConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/app.ts",
        "line": 27
      },
      "name": "SourceCodeProviderConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, `https://github.com/aws/aws-cdk`.",
            "stability": "experimental",
            "summary": "The repository for the application. Must use the `HTTPS` protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 33
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- do not use a token",
            "remarks": "Token is not stored.\n\nEither `accessToken` or `oauthToken` must be specified if `repository`\nis sepcified.",
            "stability": "experimental",
            "summary": "Personal Access token for 3rd party source control system for an Amplify App, used to create webhook and read-only deploy key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 55
          },
          "name": "accessToken",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- do not use a token",
            "remarks": "OAuth token is not stored.\n\nEither `accessToken` or `oauthToken` must be specified if `repository`\nis sepcified.",
            "stability": "experimental",
            "summary": "OAuth token for 3rd party source control system for an Amplify App, used to create webhook and read-only deploy key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/app.ts",
            "line": 44
          },
          "name": "oauthToken",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.SecretValue"
          }
        }
      ],
      "symbolId": "lib/app:SourceCodeProviderConfig"
    },
    "@aws-cdk/aws-amplify-alpha.SubDomain": {
      "assembly": "@aws-cdk/aws-amplify-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Sub domain settings.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as amplify_alpha from '@aws-cdk/aws-amplify-alpha';\n\ndeclare const branch: amplify_alpha.Branch;\nconst subDomain: amplify_alpha.SubDomain = {\n  branch: branch,\n\n  // the properties below are optional\n  prefix: 'prefix',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-amplify-alpha.SubDomain",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/domain.ts",
        "line": 184
      },
      "name": "SubDomain",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 188
          },
          "name": "branch",
          "type": {
            "fqn": "@aws-cdk/aws-amplify-alpha.IBranch"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the branch name",
            "remarks": "Use '' to map to the root of the domain",
            "stability": "experimental",
            "summary": "The prefix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/domain.ts",
            "line": 195
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/domain:SubDomain"
    }
  },
  "version": "2.20.0-alpha.0",
  "fingerprint": "**********"
}
